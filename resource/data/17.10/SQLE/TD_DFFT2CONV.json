{
    "JSONVersion": "1",
    "FuncRName": "...",
    "MaxInputFiles": 1,
    "IsPlottable": true,
    "InputFmt": false,
    "OutputFmt": true,
    "function_type": "uaf",
    "json_schema_major_version": "1",
    "json_schema_minor_version": "2",
    "json_content_version": "1",
    "function_name": "TD_DFFT2CONV",
    "function_r_name": "aa.td_dfft2conv",
    "ref_function_r_name": "aa.td_dfft2conv",
    "function_version": "...",
    "short_description": "Convert an ART generated by TD_DFFT2",
    "long_description": "The fast fourier transform converter is used to convert an ART generated by TD_DFFT2. TD_DFFT2 outputs results in human readable and raw form. Also, it may output different payload types such as AMPL_PHASE_DEGREES, MULTIVAR_AMPL_PHASE_RADIANS, COMPLEX, etc. In normal workflow the user may want a different result form in order to pass the results to another AF, plot the results in human readable form, compare the results to python, etc. Instead of rerunning TD_DFFT2 to produce a different result form, TD_DFFT2CONV can be used to accomplish the task faster and with less memory consumption. ",
    "input_tables": [
        {
            "LangName": "data or object or newdata or ... --> Langauges team can work with UAF team to come up with this field",
            "requiredInputKind": [
                "PartitionByNone"
            ],
            "isOrdered": false,
            "partitionByOne": false,
            "alternateNames": [],
            "isRequired": true,
            "description": "Takes as input, the output from computing DFFT2",
            "rDescription": "Takes as input, the output from computing DFFT2",
            "datatype": "TABLE_ALIAS",
            "allowsLists": false,
            "name": "Input",
            "rName": "Input",
            "useInR": true,
            "rOrderNum": 1,
            "uaf": {
                "requiredUafKind": [
                    "MATRIX",
                    "ART"
                ],
                "is_row_sequence": "SEQUENCE",
                "is_col_sequence": "SEQUENCE",
                "row_axis_name": "",
                "column_axis_name": "",
                "id_name": "",
                "id_sequence": "",
                "payload_fields": "",
                "payload_content": "",
                "layer": "",
                "where": "",
                "time_duration": "",
                "time_zero": "",
                "time_type": "",
                "seq_zero": "",
                "interval": "Off",
                "details": true,
                "instance_names": "",
                "data_type": "",
                "payload_start_value": "",
                "payload_offset_value": "",
                "payload_num_entries": "",
                "index": 0
            },
            "uafType": ""
        }
    ],
    "output_tables": [
        {
            "Type": "ART",
            "PrimaryLayer": true,
            "LayerName": "ARTPRIMARY",
            "ResultTableColumnTypes": [
                "integer",
                "float",
                "float"
            ],
            "LangName": "data or object or newdata or ... --> Langauges team can work with UAF team to come up with this field",
            "isOutputTable": true,
            "omitPossible": true,
            "partitionByOne": false,
            "alternateNames": [],
            "isRequired": false,
            "description": "The TD_DFFT2CONV function returns only a primary result set.   There are no secondary or tertiary result sets produced by this function.  The primary result set can be retrieved by issuing a SELECT against the analytical table containing the results.The data scientist has the choice of outputting the result set with the produced Fourier Coefficients being realized in rectangular form, meaning: complex numbers - OUTPUT_FMT(CONTENT(COMPLEX)); or, in polar form, meaning amplitude and phase number pairs - OUTPUT_FMT(CONTENT(AMPL_PHASE_RADIANS) | CONTENT(AMPL_PHASE_DEGREES) | CONTENT(AMPL_PHASE)).  This will, of course, affect the composition of the produced output columns. Note that the multivar-variety of content types : complex and amplitude-phase; are also supported and have the same result table output format.The two float values are AMPLITUDE and PHASE if OUTPUT_FMT(CONTENT(AMPL_PHASE_DEGREES) | CONTENT(AMPL_PHASE_RADIANS) | CONTENT(AMPL_PHASE) | CONTENT(MULTIVAR_AMPL_PHASE_DEGREES) | CONTENT(MULTIVAR_AMPL_PHASE_RADIANS) | CONTENT(MULTIVAR_AMPL_PHASE)).   Fourier Amplitude coefficient corresponding to ROW_I indexThe two float values are REAL and IMAGINARY if OUTPUT_FMT(CONTENT(COMPLEX)).   Fourier Real coefficient corresponding to ROW_I index",
            "rDescription": "The TD_DFFT2CONV function returns only a primary result set.   There are no secondary or tertiary result sets produced by this function.  The primary result set can be retrieved by issuing a SELECT against the analytical table containing the results.The data scientist has the choice of outputting the result set with the produced Fourier Coefficients being realized in rectangular form, meaning: complex numbers - OUTPUT_FMT(CONTENT(COMPLEX)); or, in polar form, meaning amplitude and phase number pairs - OUTPUT_FMT(CONTENT(AMPL_PHASE_RADIANS) | CONTENT(AMPL_PHASE_DEGREES) | CONTENT(AMPL_PHASE)).  This will, of course, affect the composition of the produced output columns. Note that the multivar-variety of content types : complex and amplitude-phase; are also supported and have the same result table output format.The two float values are AMPLITUDE and PHASE if OUTPUT_FMT(CONTENT(AMPL_PHASE_DEGREES) | CONTENT(AMPL_PHASE_RADIANS) | CONTENT(AMPL_PHASE) | CONTENT(MULTIVAR_AMPL_PHASE_DEGREES) | CONTENT(MULTIVAR_AMPL_PHASE_RADIANS) | CONTENT(MULTIVAR_AMPL_PHASE)).   Fourier Amplitude coefficient corresponding to ROW_I indexThe two float values are REAL and IMAGINARY if OUTPUT_FMT(CONTENT(COMPLEX)).   Fourier Real coefficient corresponding to ROW_I index",
            "datatype": "TABLE_NAME",
            "allowsLists": false,
            "name": "OutputTable1",
            "rName": "OutputTable1",
            "useInR": true,
            "rOrderNum": 2
        }
    ],
    "argument_clauses": [
        {
            "name": "OutputFormat",
            "defaultValue": "INDEX_STYLE(NUMERICAL_SEQUENCE)",
            "permittedValues": [
                "INDEX_STYLE(NUMERICAL_SEQUENCE)",
                "INDEX_STYLE(FLOW_THROUGH)",
                "CONTENT(AMPL_PHASE_RADIANS)"
            ],
            "allowsLists": false,
            "Type": "string",
            "datatype": "STRING",
            "description": "Output format",
            "isRequired": false,
            "rOrderNum": 3
        },
        {
            "name": "CONV",
            "permittedValues": [
                "RAW_TO_HR",
                "HR_TO_RAW"
            ],
            "allowsLists": false,
            "Type": "string",
            "datatype": "STRING",
            "description": "Required Parameter that specifies the type of conversion to be performed by this function: convert from human readable to raw form; or, convert from raw form to human readable form.",
            "isRequired": true,
            "rOrderNum": 4
        },
        {
            "name": "FREQ_STYLE",
            "permittedValues": [
                "K_INTEGRAL",
                "K_SAMPLE_RATE",
                "K_RADIANS",
                "K_HERTZ"
            ],
            "allowsLists": false,
            "Type": "string",
            "datatype": "STRING",
            "description": "Optional Parameter.  Determines format/values associated with the x-axis of the output.  Choices are: 'K_INTEGRAL', an integer representation.; 'K_SAMPLE_RATE': normalized to 'Number Entries', ranges from -0.5 to +0.5;  'K_RADIANS', ranges from -PI to +PI; and, 'K_HERTZ', must be used in conjunction with the 'HERTZ_SAMPLE_RATE', this represents the frequency in hertz. The Default is 'K_INTEGRAL'. ",
            "isRequired": false,
            "rOrderNum": 5
        },
        {
            "name": "HERTZ_SAMPLE_RATE",
            "lowerBound": 0,
            "lowerBoundType": "INCLUSIVE",
            "allowsLists": false,
            "Type": "float",
            "datatype": "DOUBLE",
            "description": "Optional Parameter.  Only valid with a FREQ_STYLE(K_HERTZ).  A Floating point constant representing the sample rate, in hertz.  A value of 10000.0 means that the sample points were obtained by sampling at a rate of 10,000 hertz.",
            "isRequired": false,
            "rOrderNum": 6
        }
    ]
}
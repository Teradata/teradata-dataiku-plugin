{
    "FunctionCategory": "Model Preparation and Parameter Estimation",
    "JSONVersion": "1",
    "FuncRName": "td_DIFF",
    "MaxInputFiles": 1,
    "IsPlottable": true,
    "InputFmt": false,
    "OutputFmt": [
        {
            "name": "OutputFormat",
            "defaultValue": "INDEX_STYLE(NUMERICAL_SEQUENCE)",
            "permittedValues": [
                "INDEX_STYLE(NUMERICAL_SEQUENCE)"
            ],
            "langName": "output_fmt_index_style",
            "allowsLists": false,
            "Type": "string",
            "datatype": "STRING",
            "description": "Specifies the INDEX_STYLE of the output format.",
            "isRequired": false,
            "rOrderNum": 3
        }
    ],
    "function_type": "uaf",
    "json_schema_major_version": "1",
    "json_schema_minor_version": "2",
    "json_content_version": "1",
    "function_name": "TD_DIFF",
    "function_r_name": "aa.td_diff",
    "ref_function_r_name": "aa.td_diff",
    "function_version": "...",
    "short_description": "Difference and Seasonal Difference function",
    "long_description": "The Teradata TD_DIFF - Difference and Seasonal Difference function; enables you to perform both status-quo time series differencing, seasonal based differencing, and multiplicative transforms to transform your likely non-stationary time series into a differenced time series - and thus the output of this transform function is always a new time series.",
    "input_tables": [
        {
            "LangName": "data or object or newdata or ... --> Langauges team can work with UAF team to come up with this field",
            "requiredInputKind": [
                "PartitionByNone"
            ],
            "isOrdered": false,
            "partitionByOne": false,
            "alternateNames": [],
            "isRequired": true,
            "description": "The TD_DIFF function can either be passed a single time series (SERIES_SPEC(CONTENT(REAL))  as input, or can be passed in a multivariate time series (SERIES_SPEC(CONTENT(MULTIVAR_REAL)) .  When passed in a multivariate series, the TD_DIFF function is executed separately against each identified series in the collection and produce a coalesced multivariate style analytical result set (OUTPUT_FMT(CONTENT(MULTIVAR_REAL)).",
            "rDescription": "The TD_DIFF function can either be passed a single time series (SERIES_SPEC(CONTENT(REAL))  as input, or can be passed in a multivariate time series (SERIES_SPEC(CONTENT(MULTIVAR_REAL)) .  When passed in a multivariate series, the TD_DIFF function is executed separately against each identified series in the collection and produce a coalesced multivariate style analytical result set (OUTPUT_FMT(CONTENT(MULTIVAR_REAL)).",
            "datatype": "TABLE_ALIAS",
            "allowsLists": false,
            "name": "Input",
            "rName": "Input",
            "useInR": true,
            "rOrderNum": 1,
            "uaf": {
                "requiredUafKind": [
                    "ART",
                    "SERIES"
                ],
                "is_row_sequence": "SEQUENCE",
                "is_col_sequence": "SEQUENCE",
                "row_axis_name": "",
                "column_axis_name": "",
                "id_name": "",
                "id_sequence": "",
                "payload_fields": "",
                "payload_content": "",
                "layer": "",
                "where": "",
                "time_duration": "",
                "time_zero": "",
                "time_type": "",
                "seq_zero": "",
                "interval": "Off",
                "details": true,
                "instance_names": "",
                "data_type": "",
                "payload_start_value": "",
                "payload_offset_value": "",
                "payload_num_entries": "",
                "index": 0
            },
            "uafType": ""
        }
    ],
    "output_tables": [
        {
            "Type": "SERIES",
            "PrimaryLayer": true,
            "LayerName": "ARTPRIMARY",
            "ResultTableColumnTypes": [
                "integer",
                "float"
            ],
            "LangName": "data or object or newdata or ... --> Langauges team can work with UAF team to come up with this field",
            "isOutputTable": true,
            "omitPossible": true,
            "partitionByOne": false,
            "alternateNames": [],
            "isRequired": false,
            "description": "In its simplest form, the function returns a row index column (controlled by a OUTPUT_FMT(INDEX_STYLE) specification), and a single magnitude column (CONTENT(REAL)), where the magnitude column is the result of applying the TD_DIFF function against the original series.Invoking this UAF function generates only a primary analytical result set, there are no secondary or other result sets generated by invoking this function. There are two ways of returning the primary results when they reside within an ART table:By issuing a  SELECT  statement issued against the analytical result table.By executing a TD_EXTRACTRESULTS containing LAYER(ARTFITRESIDUALS) as a passed in FUNC_PARAMS parameter.",
            "rDescription": "In its simplest form, the function returns a row index column (controlled by a OUTPUT_FMT(INDEX_STYLE) specification), and a single magnitude column (CONTENT(REAL)), where the magnitude column is the result of applying the TD_DIFF function against the original series.Invoking this UAF function generates only a primary analytical result set, there are no secondary or other result sets generated by invoking this function. There are two ways of returning the primary results when they reside within an ART table:By issuing a  SELECT  statement issued against the analytical result table.By executing a TD_EXTRACTRESULTS containing LAYER(ARTFITRESIDUALS) as a passed in FUNC_PARAMS parameter.",
            "datatype": "TABLE_NAME",
            "allowsLists": false,
            "name": "OutputTable1",
            "rName": "OutputTable1",
            "useInR": true,
            "rOrderNum": 2
        }
    ],
    "argument_clauses": [
        {
            "name": "OutputFormat",
            "defaultValue": "INDEX_STYLE(NUMERICAL_SEQUENCE)",
            "permittedValues": [
                "INDEX_STYLE(NUMERICAL_SEQUENCE)"
            ],
            "langName": "output_fmt_index_style",
            "allowsLists": false,
            "Type": "string",
            "datatype": "STRING",
            "description": "Specifies the INDEX_STYLE of the output format.",
            "isRequired": false,
            "rOrderNum": 3
        },
        {
            "name": "LAG",
            "lowerBound": 0,
            "lowerBoundType": "INCLUSIVE",
            "allowNaN": false,
            "allowsLists": false,
            "Type": "integer",
            "datatype": "INTEGER",
            "description": "Zero or Positive Integer value.  References, relative to any time series element, Y_t, another time series element located at Y_{t-LAG}.",
            "isRequired": true,
            "rOrderNum": 4
        },
        {
            "name": "DIFFERENCES",
            "lowerBound": 0,
            "lowerBoundType": "INCLUSIVE",
            "allowNaN": false,
            "allowsLists": false,
            "Type": "integer",
            "datatype": "INTEGER",
            "description": "Zero or Positive Integer value.  Used in formula as (1-B^LAG)^DIFFERENCES * Y_t",
            "isRequired": true,
            "rOrderNum": 5
        },
        {
            "name": "SEASONAL_MULTIPLIER",
            "lowerBound": 0,
            "lowerBoundType": "INCLUSIVE",
            "allowNaN": false,
            "allowsLists": false,
            "Type": "integer",
            "datatype": "INTEGER",
            "description": "Zero or Positive Integer value.  Compute diff according to if SEASONAL_MULTIPLIER is 0 then result is (1-B^LAG)^DIFFERENCES * Y_t, otherwise multiply same result by (1-B)^SEASONAL_MULTIPLIER",
            "isRequired": true,
            "rOrderNum": 6
        }
    ]
}
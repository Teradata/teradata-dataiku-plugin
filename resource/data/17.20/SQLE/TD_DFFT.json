{
    "FunctionCategory": "Temporal and Spatial",
    "JSONVersion": "1",
    "FuncRName": "td_DFFT",
    "MaxInputFiles": 1,
    "IsPlottable": true,
    "InputFmt": false,
    "OutputFmt": [
        {
            "name": "OutputFormat",
            "permittedValues": [
                "CONTENT(COMPLEX)",
                "CONTENT(AMPL_PHASE_RADIANS)",
                "CONTENT(AMPL_PHASE_DEGREES)",
                "CONTENT(AMPL_PHASE)",
                "CONTENT(MULTIVAR_COMPLEX)",
                "CONTENT(MULTIVAR_AMPL_PHASE_RADIANS)",
                "CONTENT(MULTIVAR_AMPL_PHASE_DEGREES)",
                "CONTENT(MULTIVAR_AMPL_PHASE)"
            ],
            "langName": "output_fmt_content",
            "allowsLists": false,
            "Type": "string",
            "datatype": "STRING",
            "description": "The OUTPUT_FMT (CONTENT()) construct can be used by the data scientist to choose how they would like their Fourier coefficients to be output.  The can use CONTENT(COMPLEX) or CONTENT(MULTIVAR_COMPLEX) to request the Fourier coefficients in rectangular form.  Alternatively, they can use CONTENT(AMPL_PHASE_RADIANS), CONTENT(AMPL_PHASE_DEGREES), CONTENT(AMPL_PHASE), CONTENT(MULTIVAR_AMPL_PHASE_RADIANS), CONTENT(MULTIVAR_AMPL_PHASE), or CONTENT(MULTIVAR_AMPL_PHASE_DEGREES) to request that the Fourier coefficients be output in the polar form; and to further request the phase to be output in radians or degrees. AMPL_PHASE is one of the permitted values, it is synonymous with AMPL_PHASE_RADIANS. Similarly MULTIVAR_AMPL_PHASE is equivalent to MULTIVAR_AMPL_PHASE_RADIANS.The default value is dependent on the datatype of the input series; a single var input will generate COMPLEX output CONTENT by default; a multi var input will generate MULTIVAR_COMPLEX output CONTENT by default.",
            "isRequired": false,
            "rOrderNum": 3
        }
    ],
    "function_type": "uaf",
    "json_schema_major_version": "1",
    "json_schema_minor_version": "2",
    "json_content_version": "1",
    "function_name": "TD_DFFT",
    "function_r_name": "aa.td_dfft",
    "ref_function_r_name": "aa.td_dfft",
    "function_version": "...",
    "short_description": "transforms the series from the time or spatial domain to the temporal frequency or spatial frequency domain",
    "long_description": "At its core, this function takes a logical-runtime series - time series or spatial series - as an input and transforms the series from the time or spatial domain to the temporal frequency or spatial frequency domain, respectively.  The input logical-runtime series can contain elements which are either real numbers PAYLOAD(CONTENT(REAL) | CONTENT(MULTIVAR_REAL)) or complex numbers PAYLOAD(CONTENT(COMPLEX) | CONTENT(MULTIVAR_COMPLEX)).    The result series is always a multivariate series containing Fourier coefficients, whose elements are either complex numbers with real and imaginary components - OUTPUT_FMT(CONTENT(COMPLEX) | CONTENT(MULTIVAR_COMPLEX)); or, alternatively, whose elements consist of amplitude and phase number pairs - OUTPUT_FMT(CONTENT(AMPL_PHASE_DEGREES) | CONTENT(AMPL_PHASE_RADIANS)  | CONTENT(AMPL_PHASE) | CONTENT(MULTIVAR_AMPL_PHASE_DEGREES) | CONTENT(MULTIVAR_AMPL_PHASE_RADIANS) | CONTENT(MULTIVAR_AMPL_PHASE)  ). The default index of this output series is integer-based. It starts at the negative Nyquist frequency (-N/2) and goes up to the positive Nyquist frequency (N/2).  Other choices for output indexes are also available to the user.",
    "input_tables": [
        {
            "LangName": "data or object or newdata or ... --> Langauges team can work with UAF team to come up with this field",
            "requiredInputKind": [
                "PartitionByNone"
            ],
            "isOrdered": false,
            "partitionByOne": false,
            "alternateNames": [],
            "isRequired": true,
            "description": "a logical-runtime series - time series or spatial series - as an input",
            "rDescription": "a logical-runtime series - time series or spatial series - as an input",
            "datatype": "TABLE_ALIAS",
            "allowsLists": false,
            "name": "Input",
            "rName": "Input",
            "useInR": true,
            "rOrderNum": 1,
            "uaf": {
                "requiredUafKind": [
                    "SERIES",
                    "ART"
                ],
                "is_row_sequence": "SEQUENCE",
                "is_col_sequence": "SEQUENCE",
                "row_axis_name": "",
                "column_axis_name": "",
                "id_name": "",
                "id_sequence": "",
                "payload_fields": "",
                "payload_content": "",
                "layer": "",
                "where": "",
                "time_duration": "",
                "time_zero": "",
                "time_type": "",
                "seq_zero": "",
                "interval": "Off",
                "details": true,
                "instance_names": "",
                "data_type": "",
                "payload_start_value": "",
                "payload_offset_value": "",
                "payload_num_entries": "",
                "index": 0
            },
            "uafType": ""
        }
    ],
    "output_tables": [
        {
            "Type": "ART",
            "PrimaryLayer": true,
            "LayerName": "ARTPRIMARY",
            "ResultTableColumnTypes": [
                "integer",
                "float",
                "float"
            ],
            "LangName": "data or object or newdata or ... --> Langauges team can work with UAF team to come up with this field",
            "isOutputTable": true,
            "omitPossible": true,
            "partitionByOne": false,
            "alternateNames": [],
            "isRequired": false,
            "description": "The result series is always a multivariate series containing Fourier coefficients, whose elements are either complex numbers with real and imaginary componentThe TD_DFFT function returns only a primary result set.   There are no secondary or tertiary result sets produced by this function.  The primary result set can be accessed either via a subsequent SELECT * FROM <art table> statement or by issuing a TD_EXTRACT_RESULTS(\u2026,LAYER(ARTPRIMARY),\u2026) .The data scientist has the choice of outputting the result set with the produced  Fourier Coefficients being realized in the form of: complex numbers - OUTPUT_FMT(CONTENT(COMPLEX) | CONTENT(MULTIVAR_COMPLEX)); or, in polar form, meaning in the form of amplitude and phase number pairs - OUTPUT_FMT(CONTENT(AMPL_PHASE_RADIANS) | CONTENT(AMPL_PHASE_DEGREES) | CONTENT(AMPL_PHASE) | CONTENT(MULTIVAR_AMPL_PHASE_RADIANS)  | CONTENT(AMPL_PHASE_RADIANS) | CONTENT(MULTIVAR_AMPL_PHASE) ).  This will, of course, affect the composition of the produced output columns.The TD_DFFT functions comes with many options relative to the contents of the output rows.  The data scientist has both the ability to affect the style of index used within the result series, as well as whether the Fourier coefficients should be output in rectangular (complex number) or polar (amplitude-phase) form.  Using the FREQ_STYLE and K_HERTZ parameters, the data scientist can choose between different ways of outputting the \u201cindex\u201d associated with the output series of Fourier coefficients, choosing between: a simple monotonically increasing integer index; an index based on the normalized sample rate; an index based on radians; and, an index based on the original sampling frequency used to capture the series.  See FREQ_STYLE section which follows, for additional information. The OUTPUT_FMT (CONTENT()) construct can be used by the data scientist to choose how they would like their Fourier coefficients to be output.  The can use CONTENT(COMPLEX) or CONTENT(MULTIVAR_COMPLEX) to request the Fourier coefficients in rectangular form.  Alternatively, they can use CONTENT(AMPL_PHASE_RADIANS), CONTENT(AMPL_PHASE_DEGREES), CONTENT(AMPL_PHASE), CONTENT(MULTIVAR_AMPL_PHASE_RADIANS), CONTENT(MULTIVAR_AMPL_PHASE), or CONTENT(MULTIVAR_AMPL_PHASE_DEGREES) to request that the Fourier coefficients be output in the polar form; and to further request the phase to be output in radians or degrees. ",
            "rDescription": "The result series is always a multivariate series containing Fourier coefficients, whose elements are either complex numbers with real and imaginary componentThe TD_DFFT function returns only a primary result set.   There are no secondary or tertiary result sets produced by this function.  The primary result set can be accessed either via a subsequent SELECT * FROM <art table> statement or by issuing a TD_EXTRACT_RESULTS(\u2026,LAYER(ARTPRIMARY),\u2026) .The data scientist has the choice of outputting the result set with the produced  Fourier Coefficients being realized in the form of: complex numbers - OUTPUT_FMT(CONTENT(COMPLEX) | CONTENT(MULTIVAR_COMPLEX)); or, in polar form, meaning in the form of amplitude and phase number pairs - OUTPUT_FMT(CONTENT(AMPL_PHASE_RADIANS) | CONTENT(AMPL_PHASE_DEGREES) | CONTENT(AMPL_PHASE) | CONTENT(MULTIVAR_AMPL_PHASE_RADIANS)  | CONTENT(AMPL_PHASE_RADIANS) | CONTENT(MULTIVAR_AMPL_PHASE) ).  This will, of course, affect the composition of the produced output columns.The TD_DFFT functions comes with many options relative to the contents of the output rows.  The data scientist has both the ability to affect the style of index used within the result series, as well as whether the Fourier coefficients should be output in rectangular (complex number) or polar (amplitude-phase) form.  Using the FREQ_STYLE and K_HERTZ parameters, the data scientist can choose between different ways of outputting the \u201cindex\u201d associated with the output series of Fourier coefficients, choosing between: a simple monotonically increasing integer index; an index based on the normalized sample rate; an index based on radians; and, an index based on the original sampling frequency used to capture the series.  See FREQ_STYLE section which follows, for additional information. The OUTPUT_FMT (CONTENT()) construct can be used by the data scientist to choose how they would like their Fourier coefficients to be output.  The can use CONTENT(COMPLEX) or CONTENT(MULTIVAR_COMPLEX) to request the Fourier coefficients in rectangular form.  Alternatively, they can use CONTENT(AMPL_PHASE_RADIANS), CONTENT(AMPL_PHASE_DEGREES), CONTENT(AMPL_PHASE), CONTENT(MULTIVAR_AMPL_PHASE_RADIANS), CONTENT(MULTIVAR_AMPL_PHASE), or CONTENT(MULTIVAR_AMPL_PHASE_DEGREES) to request that the Fourier coefficients be output in the polar form; and to further request the phase to be output in radians or degrees. ",
            "datatype": "TABLE_NAME",
            "allowsLists": false,
            "name": "OutputTable1",
            "rName": "OutputTable1",
            "useInR": true,
            "rOrderNum": 2
        }
    ],
    "argument_clauses": [
        {
            "name": "OutputFormat",
            "permittedValues": [
                "CONTENT(COMPLEX)",
                "CONTENT(AMPL_PHASE_RADIANS)",
                "CONTENT(AMPL_PHASE_DEGREES)",
                "CONTENT(AMPL_PHASE)",
                "CONTENT(MULTIVAR_COMPLEX)",
                "CONTENT(MULTIVAR_AMPL_PHASE_RADIANS)",
                "CONTENT(MULTIVAR_AMPL_PHASE_DEGREES)",
                "CONTENT(MULTIVAR_AMPL_PHASE)"
            ],
            "langName": "output_fmt_content",
            "allowsLists": false,
            "Type": "string",
            "datatype": "STRING",
            "description": "The OUTPUT_FMT (CONTENT()) construct can be used by the data scientist to choose how they would like their Fourier coefficients to be output.  The can use CONTENT(COMPLEX) or CONTENT(MULTIVAR_COMPLEX) to request the Fourier coefficients in rectangular form.  Alternatively, they can use CONTENT(AMPL_PHASE_RADIANS), CONTENT(AMPL_PHASE_DEGREES), CONTENT(AMPL_PHASE), CONTENT(MULTIVAR_AMPL_PHASE_RADIANS), CONTENT(MULTIVAR_AMPL_PHASE), or CONTENT(MULTIVAR_AMPL_PHASE_DEGREES) to request that the Fourier coefficients be output in the polar form; and to further request the phase to be output in radians or degrees. AMPL_PHASE is one of the permitted values, it is synonymous with AMPL_PHASE_RADIANS. Similarly MULTIVAR_AMPL_PHASE is equivalent to MULTIVAR_AMPL_PHASE_RADIANS.The default value is dependent on the datatype of the input series; a single var input will generate COMPLEX output CONTENT by default; a multi var input will generate MULTIVAR_COMPLEX output CONTENT by default.",
            "isRequired": false,
            "rOrderNum": 3
        },
        {
            "name": "ZERO_PADDING_OK",
            "defaultValue": 1,
            "permittedValues": [
                0,
                1
            ],
            "allowsLists": false,
            "Type": "integer",
            "datatype": "INTEGER",
            "description": "Optional Parameter.  Determines whether it is OK to add zeros to the end of a given Series to achieve a more efficient  computation of the FFT coefficients.  A value of '1' means true; a value of '0' means false.  Default is true.",
            "isRequired": false,
            "rOrderNum": 4
        },
        {
            "name": "FREQ_STYLE",
            "defaultValue": "K_INTEGRAL",
            "permittedValues": [
                "K_INTEGRAL",
                "K_SAMPLE_RATE",
                "K_RADIANS",
                "K_HERTZ"
            ],
            "allowsLists": false,
            "Type": "string",
            "datatype": "STRING",
            "description": "Optional Parameter.  Determines format/values associated with the x-axis of the output.  Choices are: 'K_INTEGRAL', an integer representation.; 'K_SAMPLE_RATE': normalized to 'Number Entries', ranges from -0.5 to +0.5;  'K_RADIANS', ranges from -PI to +PI; and, 'K_HERTZ', must be used in conjunction with the 'HERTZ_SAMPLE_RATE', this represents the frequency in hertz. The Default is 'K_INTEGRAL'. ",
            "isRequired": false,
            "rOrderNum": 5
        },
        {
            "name": "HERTZ_SAMPLE_RATE",
            "lowerBound": 0,
            "lowerBoundType": "INCLUSIVE",
            "allowNaN": false,
            "allowsLists": false,
            "Type": "float",
            "datatype": "DOUBLE",
            "description": "Optional Parameter.  Only valid with a FREQ_STYLE(K_HERTZ).  A Floating point constant representing the sample rate, in hertz.  A value of 10000.0 means that the sample points were obtained by sampling at a rate of 10,000 hertz.",
            "isRequired": false,
            "rOrderNum": 6
        },
        {
            "name": "ALGORITHM",
            "permittedValues": [
                "COOLEY_TUKEY",
                "SINGLETON"
            ],
            "allowsLists": false,
            "Type": "string",
            "datatype": "STRING",
            "description": "Optional Parameter.  Bypasses the internal DFFT Planner and influences the core DFFT algorithm associated with the primary DFFT calculation.  Choices are: 'COOLEY_TUKEY', or 'SINGLETON'.  When this parameter is NOT PRESENT.  The internal DFFT 'Planner' will select the most efficient algorithm for the operation. ",
            "isRequired": false,
            "rOrderNum": 7
        },
        {
            "name": "HUMAN_READABLE",
            "defaultValue": 1,
            "permittedValues": [
                0,
                1
            ],
            "allowsLists": false,
            "Type": "integer",
            "datatype": "INTEGER",
            "description": "Optional Parameter.  Determines whether the produced output rows are in a human-readable / plottable form; or if they are output in the raw-form, which is equivalent to how the 'R' and 'PYTHON' programs would output the results.     A value of '1' means true, output in human readable form; a value of '0' means false, output in raw form.  Default is true \u2013 output in Human Readable format.",
            "isRequired": false,
            "rOrderNum": 8
        }
    ]
}